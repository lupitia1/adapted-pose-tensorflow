node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 200
        }
        dim {
          size: 200
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 26
        }
        dim {
          size: 26
        }
        dim {
          size: 21
        }
      }
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 26
        }
        dim {
          size: 26
        }
        dim {
          size: 21
        }
      }
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 26
        }
        dim {
          size: 26
        }
        dim {
          size: 42
        }
      }
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 26
        }
        dim {
          size: 26
        }
        dim {
          size: 42
        }
      }
    }
  }
}
node {
  name: "fifo_queue"
  op: "FIFOQueueV2"
  attr {
    key: "capacity"
    value {
      i: 20
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fifo_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "fifo_queue"
  input: "Placeholder"
  input: "Placeholder_1"
  input: "Placeholder_2"
  input: "Placeholder_3"
  input: "Placeholder_4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "fifo_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "fifo_queue"
  attr {
    key: "component_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "img_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        tensor_content: ")\\\367B\331\216\351B\305\340\317B"
      }
    }
  }
}
node {
  name: "sub"
  op: "Sub"
  input: "fifo_queue_Dequeue"
  input: "img_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/Pad"
  op: "Pad"
  input: "sub"
  input: "resnet_v1_50/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.13299275934696198
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/weights"
  input: "resnet_v1_50/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/Pad"
  input: "resnet_v1_50/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  input: "resnet_v1_50/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/conv1/Conv2D"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/pool1/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06718548387289047
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20155644416809082
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool"
  op: "MaxPool"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad"
  op: "Pad"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.047507308423519135
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.142521932721138
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.033592741936445236
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10077822208404541
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.050389111042022705
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/filter_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND/block_shape"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND/block_shape"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831802845
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/filter_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND/block_shape"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND/block_shape"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0356304831802845
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.023753654211759567
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/filter_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/required_space_to_batch_paddings/input_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\r\000\000\000\r\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/required_space_to_batch_paddings/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/required_space_to_batch_paddings/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND/block_shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND/block_shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.071260966360569
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/TruncatedNormal"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  op: "Add"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Initializer/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/scale"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D"
  op: "Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.996999979019165
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/add"
  op: "Add"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  op: "Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\025\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.017950398847460747
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.017950398847460747
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/max"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/RandomUniform"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Initializer/random_uniform"
  op: "Add"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/mul"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 21
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Assign"
  op: "Assign"
  input: "pose/part_pred/block4/weights"
  input: "pose/part_pred/block4/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/read"
  op: "Identity"
  input: "pose/part_pred/block4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pose/part_pred/block4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/scale"
  input: "pose/part_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 21
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 21
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/Assign"
  op: "Assign"
  input: "pose/part_pred/block4/biases"
  input: "pose/part_pred/block4/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/read"
  op: "Identity"
  input: "pose/part_pred/block4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\r\000\000\000\r\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice"
  op: "StridedSlice"
  input: "pose/part_pred/block4/Shape"
  input: "pose/part_pred/block4/strided_slice/stack"
  input: "pose/part_pred/block4/strided_slice/stack_1"
  input: "pose/part_pred/block4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_1"
  op: "StridedSlice"
  input: "pose/part_pred/block4/Shape"
  input: "pose/part_pred/block4/strided_slice_1/stack"
  input: "pose/part_pred/block4/strided_slice_1/stack_1"
  input: "pose/part_pred/block4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_2"
  op: "StridedSlice"
  input: "pose/part_pred/block4/Shape"
  input: "pose/part_pred/block4/strided_slice_2/stack"
  input: "pose/part_pred/block4/strided_slice_2/stack_1"
  input: "pose/part_pred/block4/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/part_pred/block4/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/mul"
  op: "Mul"
  input: "pose/part_pred/block4/strided_slice_1"
  input: "pose/part_pred/block4/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/part_pred/block4/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/mul_1"
  op: "Mul"
  input: "pose/part_pred/block4/strided_slice_2"
  input: "pose/part_pred/block4/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/part_pred/block4/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 21
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/stack"
  op: "Pack"
  input: "pose/part_pred/block4/strided_slice"
  input: "pose/part_pred/block4/mul"
  input: "pose/part_pred/block4/mul_1"
  input: "pose/part_pred/block4/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/strided_slice_3"
  op: "StridedSlice"
  input: "pose/part_pred/block4/stack"
  input: "pose/part_pred/block4/strided_slice_3/stack"
  input: "pose/part_pred/block4/strided_slice_3/stack_1"
  input: "pose/part_pred/block4/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/part_pred/block4/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "pose/part_pred/block4/stack"
  input: "pose/part_pred/block4/weights/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose/part_pred/block4/BiasAdd"
  op: "BiasAdd"
  input: "pose/part_pred/block4/conv2d_transpose"
  input: "pose/part_pred/block4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000*\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.017859989777207375
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.017859989777207375
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/max"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/RandomUniform"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Initializer/random_uniform"
  op: "Add"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/mul"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 42
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Assign"
  op: "Assign"
  input: "pose/locref_pred/block4/weights"
  input: "pose/locref_pred/block4/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/read"
  op: "Identity"
  input: "pose/locref_pred/block4/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "pose/locref_pred/block4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/scale"
  input: "pose/locref_pred/block4/kernel/Regularizer/l2_regularizer/L2Loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/Assign"
  op: "Assign"
  input: "pose/locref_pred/block4/biases"
  input: "pose/locref_pred/block4/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/read"
  op: "Identity"
  input: "pose/locref_pred/block4/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\r\000\000\000\r\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice"
  op: "StridedSlice"
  input: "pose/locref_pred/block4/Shape"
  input: "pose/locref_pred/block4/strided_slice/stack"
  input: "pose/locref_pred/block4/strided_slice/stack_1"
  input: "pose/locref_pred/block4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_1"
  op: "StridedSlice"
  input: "pose/locref_pred/block4/Shape"
  input: "pose/locref_pred/block4/strided_slice_1/stack"
  input: "pose/locref_pred/block4/strided_slice_1/stack_1"
  input: "pose/locref_pred/block4/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_2"
  op: "StridedSlice"
  input: "pose/locref_pred/block4/Shape"
  input: "pose/locref_pred/block4/strided_slice_2/stack"
  input: "pose/locref_pred/block4/strided_slice_2/stack_1"
  input: "pose/locref_pred/block4/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/locref_pred/block4/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/mul"
  op: "Mul"
  input: "pose/locref_pred/block4/strided_slice_1"
  input: "pose/locref_pred/block4/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/locref_pred/block4/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/mul_1"
  op: "Mul"
  input: "pose/locref_pred/block4/strided_slice_2"
  input: "pose/locref_pred/block4/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/locref_pred/block4/stack/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 42
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/stack"
  op: "Pack"
  input: "pose/locref_pred/block4/strided_slice"
  input: "pose/locref_pred/block4/mul"
  input: "pose/locref_pred/block4/mul_1"
  input: "pose/locref_pred/block4/stack/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/strided_slice_3"
  op: "StridedSlice"
  input: "pose/locref_pred/block4/stack"
  input: "pose/locref_pred/block4/strided_slice_3/stack"
  input: "pose/locref_pred/block4/strided_slice_3/stack_1"
  input: "pose/locref_pred/block4/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "pose/locref_pred/block4/conv2d_transpose"
  op: "Conv2DBackpropInput"
  input: "pose/locref_pred/block4/stack"
  input: "pose/locref_pred/block4/weights/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "pose/locref_pred/block4/BiasAdd"
  op: "BiasAdd"
  input: "pose/locref_pred/block4/conv2d_transpose"
  input: "pose/locref_pred/block4/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000\025\000\000\000"
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/zeros_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/zeros_like"
  op: "Fill"
  input: "sigmoid_cross_entropy_loss/xentropy/zeros_like/shape_as_tensor"
  input: "sigmoid_cross_entropy_loss/xentropy/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  op: "GreaterEqual"
  input: "pose/part_pred/block4/BiasAdd"
  input: "sigmoid_cross_entropy_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Select"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "pose/part_pred/block4/BiasAdd"
  input: "sigmoid_cross_entropy_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Neg"
  op: "Neg"
  input: "pose/part_pred/block4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Select_1"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "sigmoid_cross_entropy_loss/xentropy/Neg"
  input: "pose/part_pred/block4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/mul"
  op: "Mul"
  input: "pose/part_pred/block4/BiasAdd"
  input: "fifo_queue_Dequeue:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/sub"
  op: "Sub"
  input: "sigmoid_cross_entropy_loss/xentropy/Select"
  input: "sigmoid_cross_entropy_loss/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Exp"
  op: "Exp"
  input: "sigmoid_cross_entropy_loss/xentropy/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Log1p"
  op: "Log1p"
  input: "sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy"
  op: "Add"
  input: "sigmoid_cross_entropy_loss/xentropy/sub"
  input: "sigmoid_cross_entropy_loss/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000\025\000\000\000"
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "sigmoid_cross_entropy_loss/Cast/x"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Mul"
  op: "Mul"
  input: "sigmoid_cross_entropy_loss/xentropy"
  input: "sigmoid_cross_entropy_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Const"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Sum"
  op: "Sum"
  input: "sigmoid_cross_entropy_loss/Mul"
  input: "sigmoid_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "sigmoid_cross_entropy_loss/Cast/x"
  input: "sigmoid_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "sigmoid_cross_entropy_loss/num_present/ones_like/Shape"
  input: "sigmoid_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/num_present/Equal"
  input: "sigmoid_cross_entropy_loss/num_present/zeros_like"
  input: "sigmoid_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000\025\000\000\000"
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000\025\000\000\000"
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "sigmoid_cross_entropy_loss/num_present/Select"
  input: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present"
  op: "Sum"
  input: "sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  input: "sigmoid_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "sigmoid_cross_entropy_loss/Sum"
  input: "sigmoid_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "sigmoid_cross_entropy_loss/Sum_1"
  input: "sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/Sub"
  op: "Sub"
  input: "pose/locref_pred/block4/BiasAdd"
  input: "fifo_queue_Dequeue:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/Abs"
  op: "Abs"
  input: "absolute_difference/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/Less/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "absolute_difference/Less"
  op: "Less"
  input: "absolute_difference/Abs"
  input: "absolute_difference/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/Square"
  op: "Square"
  input: "absolute_difference/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "absolute_difference/mul"
  op: "Mul"
  input: "absolute_difference/mul/x"
  input: "absolute_difference/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "absolute_difference/mul_1"
  op: "Mul"
  input: "absolute_difference/mul_1/x"
  input: "absolute_difference/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/sub_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "absolute_difference/sub_1"
  op: "Sub"
  input: "absolute_difference/mul_1"
  input: "absolute_difference/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/Select"
  op: "Select"
  input: "absolute_difference/Less"
  input: "absolute_difference/mul"
  input: "absolute_difference/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  op: "NoOp"
}
node {
  name: "absolute_difference/weighted_loss/Mul"
  op: "Mul"
  input: "absolute_difference/Select"
  input: "fifo_queue_Dequeue:4"
  input: "^absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/Const"
  op: "Const"
  input: "^absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/Sum"
  op: "Sum"
  input: "absolute_difference/weighted_loss/Mul"
  input: "absolute_difference/weighted_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/Equal/y"
  op: "Const"
  input: "^absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/Equal"
  op: "Equal"
  input: "fifo_queue_Dequeue:4"
  input: "absolute_difference/weighted_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/zeros_like/Const"
  op: "Const"
  input: "^absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/zeros_like"
  op: "Fill"
  input: "absolute_difference/weighted_loss/num_present/zeros_like/shape_as_tensor"
  input: "absolute_difference/weighted_loss/num_present/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/ones_like"
  op: "Fill"
  input: "absolute_difference/weighted_loss/num_present/ones_like/Shape"
  input: "absolute_difference/weighted_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/Select"
  op: "Select"
  input: "absolute_difference/weighted_loss/num_present/Equal"
  input: "absolute_difference/weighted_loss/num_present/zeros_like"
  input: "absolute_difference/weighted_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present/Const"
  op: "Const"
  input: "^absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/num_present"
  op: "Sum"
  input: "absolute_difference/weighted_loss/num_present/Select"
  input: "absolute_difference/weighted_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/Const_1"
  op: "Const"
  input: "^absolute_difference/weighted_loss/assert_broadcastable/static_dims_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/Sum_1"
  op: "Sum"
  input: "absolute_difference/weighted_loss/Sum"
  input: "absolute_difference/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "absolute_difference/weighted_loss/value"
  op: "DivNoNan"
  input: "absolute_difference/weighted_loss/Sum_1"
  input: "absolute_difference/weighted_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05000000074505806
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "absolute_difference/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "sigmoid_cross_entropy_loss/value"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "part_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "part_loss"
      }
    }
  }
}
node {
  name: "part_loss"
  op: "ScalarSummary"
  input: "part_loss/tags"
  input: "sigmoid_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "locref_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "locref_loss"
      }
    }
  }
}
node {
  name: "locref_loss"
  op: "ScalarSummary"
  input: "locref_loss/tags"
  input: "mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "total_loss/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "total_loss"
      }
    }
  }
}
node {
  name: "total_loss"
  op: "ScalarSummary"
  input: "total_loss/tags"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "part_loss"
  input: "locref_loss"
  input: "total_loss"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 265
          }
        }
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 265
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/conv1/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 265
          }
        }
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 265
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "resnet_v1_50/conv1/weights"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_11"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_12"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_13"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_14"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_15"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_16"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_17"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_18"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_19"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_21"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_22"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_23"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_24"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_25"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_26"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_9"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
}
node {
  name: "save_1/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/filename"
  op: "PlaceholderWithDefault"
  input: "save_1/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/Const"
  op: "PlaceholderWithDefault"
  input: "save_1/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 269
          }
        }
        string_val: "pose/locref_pred/block4/biases"
        string_val: "pose/locref_pred/block4/weights"
        string_val: "pose/part_pred/block4/biases"
        string_val: "pose/part_pred/block4/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 269
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/SaveV2"
  op: "SaveV2"
  input: "save_1/Const"
  input: "save_1/SaveV2/tensor_names"
  input: "save_1/SaveV2/shape_and_slices"
  input: "pose/locref_pred/block4/biases"
  input: "pose/locref_pred/block4/weights"
  input: "pose/part_pred/block4/biases"
  input: "pose/part_pred/block4/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  input: "resnet_v1_50/conv1/weights"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/Const"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 269
          }
        }
        string_val: "pose/locref_pred/block4/biases"
        string_val: "pose/locref_pred/block4/weights"
        string_val: "pose/part_pred/block4/biases"
        string_val: "pose/part_pred/block4/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
        string_val: "resnet_v1_50/conv1/BatchNorm/beta"
        string_val: "resnet_v1_50/conv1/BatchNorm/gamma"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_mean"
        string_val: "resnet_v1_50/conv1/BatchNorm/moving_variance"
        string_val: "resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 269
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Assign"
  op: "Assign"
  input: "pose/locref_pred/block4/biases"
  input: "save_1/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_1"
  op: "Assign"
  input: "pose/locref_pred/block4/weights"
  input: "save_1/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_2"
  op: "Assign"
  input: "pose/part_pred/block4/biases"
  input: "save_1/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_3"
  op: "Assign"
  input: "pose/part_pred/block4/weights"
  input: "save_1/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_4"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_5"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_6"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_7"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_8"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_9"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_10"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_11"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_12"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_13"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_14"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_15"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_16"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_17"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_18"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_19"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save_1/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_20"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save_1/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_21"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_22"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_23"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "save_1/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_24"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_25"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_26"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_27"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_28"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_29"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_30"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_31"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_32"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_33"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_34"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_35"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_36"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_37"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_38"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_39"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_40"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_41"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_42"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_43"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_44"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_45"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_46"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_47"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_48"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_49"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_50"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_51"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_52"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_53"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_54"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_55"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_56"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_57"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_58"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_59"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_60"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_61"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_62"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_63"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_64"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_65"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_66"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_67"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_68"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_69"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save_1/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_70"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save_1/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_71"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_72"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_73"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "save_1/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_74"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_75"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_76"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_77"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_78"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_79"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_80"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_81"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_82"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_83"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_84"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_85"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_86"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_87"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_88"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_89"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_90"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_91"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_92"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_93"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_94"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_95"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_96"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_97"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_98"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_99"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_100"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_101"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_102"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_103"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_104"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_105"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_106"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_107"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_108"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_109"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_110"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_111"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_112"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_113"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_114"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_115"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_116"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_117"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_118"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_119"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_120"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_121"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_122"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_123"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_124"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_125"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_126"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_127"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_128"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_129"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_130"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_131"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_132"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_133"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_134"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save_1/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_135"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save_1/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_136"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_137"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_138"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "save_1/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_139"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_140"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_141"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_142"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_143"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_144"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_145"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_146"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_147"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_148"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_149"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_150"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_151"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_152"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_153"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_154"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_155"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_156"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_157"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_158"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_159"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_160"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_161"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_162"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_163"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_164"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_165"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_166"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_167"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_168"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_169"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_170"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_171"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_172"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_173"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_174"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_175"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_176"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_177"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_178"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_179"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_180"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_181"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_182"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_183"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_184"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_185"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_186"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_187"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_188"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_189"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_190"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_191"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_192"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_193"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_194"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_195"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_196"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_197"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_198"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_199"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_200"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_201"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_202"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_203"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_204"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_205"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_206"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_207"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_208"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_209"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_210"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_211"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_212"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_213"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_214"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_215"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_216"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_217"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_218"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_219"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_220"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_221"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_222"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_223"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_224"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_225"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_226"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_227"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_228"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_229"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "save_1/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_230"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "save_1/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_231"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_232"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_233"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "save_1/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_234"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_235"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_236"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_237"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_238"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_239"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_240"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_241"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_242"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_243"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_244"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_245"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_246"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_247"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_248"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_249"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_250"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_251"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_252"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_253"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "save_1/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_254"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "save_1/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_255"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "save_1/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_256"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_257"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_258"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "save_1/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_259"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "save_1/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_260"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "save_1/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_261"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_262"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_263"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "save_1/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_264"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  input: "save_1/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_265"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  input: "save_1/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_266"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean"
  input: "save_1/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_267"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance"
  input: "save_1/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/Assign_268"
  op: "Assign"
  input: "resnet_v1_50/conv1/weights"
  input: "save_1/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/Assign"
  input: "^save_1/Assign_1"
  input: "^save_1/Assign_10"
  input: "^save_1/Assign_100"
  input: "^save_1/Assign_101"
  input: "^save_1/Assign_102"
  input: "^save_1/Assign_103"
  input: "^save_1/Assign_104"
  input: "^save_1/Assign_105"
  input: "^save_1/Assign_106"
  input: "^save_1/Assign_107"
  input: "^save_1/Assign_108"
  input: "^save_1/Assign_109"
  input: "^save_1/Assign_11"
  input: "^save_1/Assign_110"
  input: "^save_1/Assign_111"
  input: "^save_1/Assign_112"
  input: "^save_1/Assign_113"
  input: "^save_1/Assign_114"
  input: "^save_1/Assign_115"
  input: "^save_1/Assign_116"
  input: "^save_1/Assign_117"
  input: "^save_1/Assign_118"
  input: "^save_1/Assign_119"
  input: "^save_1/Assign_12"
  input: "^save_1/Assign_120"
  input: "^save_1/Assign_121"
  input: "^save_1/Assign_122"
  input: "^save_1/Assign_123"
  input: "^save_1/Assign_124"
  input: "^save_1/Assign_125"
  input: "^save_1/Assign_126"
  input: "^save_1/Assign_127"
  input: "^save_1/Assign_128"
  input: "^save_1/Assign_129"
  input: "^save_1/Assign_13"
  input: "^save_1/Assign_130"
  input: "^save_1/Assign_131"
  input: "^save_1/Assign_132"
  input: "^save_1/Assign_133"
  input: "^save_1/Assign_134"
  input: "^save_1/Assign_135"
  input: "^save_1/Assign_136"
  input: "^save_1/Assign_137"
  input: "^save_1/Assign_138"
  input: "^save_1/Assign_139"
  input: "^save_1/Assign_14"
  input: "^save_1/Assign_140"
  input: "^save_1/Assign_141"
  input: "^save_1/Assign_142"
  input: "^save_1/Assign_143"
  input: "^save_1/Assign_144"
  input: "^save_1/Assign_145"
  input: "^save_1/Assign_146"
  input: "^save_1/Assign_147"
  input: "^save_1/Assign_148"
  input: "^save_1/Assign_149"
  input: "^save_1/Assign_15"
  input: "^save_1/Assign_150"
  input: "^save_1/Assign_151"
  input: "^save_1/Assign_152"
  input: "^save_1/Assign_153"
  input: "^save_1/Assign_154"
  input: "^save_1/Assign_155"
  input: "^save_1/Assign_156"
  input: "^save_1/Assign_157"
  input: "^save_1/Assign_158"
  input: "^save_1/Assign_159"
  input: "^save_1/Assign_16"
  input: "^save_1/Assign_160"
  input: "^save_1/Assign_161"
  input: "^save_1/Assign_162"
  input: "^save_1/Assign_163"
  input: "^save_1/Assign_164"
  input: "^save_1/Assign_165"
  input: "^save_1/Assign_166"
  input: "^save_1/Assign_167"
  input: "^save_1/Assign_168"
  input: "^save_1/Assign_169"
  input: "^save_1/Assign_17"
  input: "^save_1/Assign_170"
  input: "^save_1/Assign_171"
  input: "^save_1/Assign_172"
  input: "^save_1/Assign_173"
  input: "^save_1/Assign_174"
  input: "^save_1/Assign_175"
  input: "^save_1/Assign_176"
  input: "^save_1/Assign_177"
  input: "^save_1/Assign_178"
  input: "^save_1/Assign_179"
  input: "^save_1/Assign_18"
  input: "^save_1/Assign_180"
  input: "^save_1/Assign_181"
  input: "^save_1/Assign_182"
  input: "^save_1/Assign_183"
  input: "^save_1/Assign_184"
  input: "^save_1/Assign_185"
  input: "^save_1/Assign_186"
  input: "^save_1/Assign_187"
  input: "^save_1/Assign_188"
  input: "^save_1/Assign_189"
  input: "^save_1/Assign_19"
  input: "^save_1/Assign_190"
  input: "^save_1/Assign_191"
  input: "^save_1/Assign_192"
  input: "^save_1/Assign_193"
  input: "^save_1/Assign_194"
  input: "^save_1/Assign_195"
  input: "^save_1/Assign_196"
  input: "^save_1/Assign_197"
  input: "^save_1/Assign_198"
  input: "^save_1/Assign_199"
  input: "^save_1/Assign_2"
  input: "^save_1/Assign_20"
  input: "^save_1/Assign_200"
  input: "^save_1/Assign_201"
  input: "^save_1/Assign_202"
  input: "^save_1/Assign_203"
  input: "^save_1/Assign_204"
  input: "^save_1/Assign_205"
  input: "^save_1/Assign_206"
  input: "^save_1/Assign_207"
  input: "^save_1/Assign_208"
  input: "^save_1/Assign_209"
  input: "^save_1/Assign_21"
  input: "^save_1/Assign_210"
  input: "^save_1/Assign_211"
  input: "^save_1/Assign_212"
  input: "^save_1/Assign_213"
  input: "^save_1/Assign_214"
  input: "^save_1/Assign_215"
  input: "^save_1/Assign_216"
  input: "^save_1/Assign_217"
  input: "^save_1/Assign_218"
  input: "^save_1/Assign_219"
  input: "^save_1/Assign_22"
  input: "^save_1/Assign_220"
  input: "^save_1/Assign_221"
  input: "^save_1/Assign_222"
  input: "^save_1/Assign_223"
  input: "^save_1/Assign_224"
  input: "^save_1/Assign_225"
  input: "^save_1/Assign_226"
  input: "^save_1/Assign_227"
  input: "^save_1/Assign_228"
  input: "^save_1/Assign_229"
  input: "^save_1/Assign_23"
  input: "^save_1/Assign_230"
  input: "^save_1/Assign_231"
  input: "^save_1/Assign_232"
  input: "^save_1/Assign_233"
  input: "^save_1/Assign_234"
  input: "^save_1/Assign_235"
  input: "^save_1/Assign_236"
  input: "^save_1/Assign_237"
  input: "^save_1/Assign_238"
  input: "^save_1/Assign_239"
  input: "^save_1/Assign_24"
  input: "^save_1/Assign_240"
  input: "^save_1/Assign_241"
  input: "^save_1/Assign_242"
  input: "^save_1/Assign_243"
  input: "^save_1/Assign_244"
  input: "^save_1/Assign_245"
  input: "^save_1/Assign_246"
  input: "^save_1/Assign_247"
  input: "^save_1/Assign_248"
  input: "^save_1/Assign_249"
  input: "^save_1/Assign_25"
  input: "^save_1/Assign_250"
  input: "^save_1/Assign_251"
  input: "^save_1/Assign_252"
  input: "^save_1/Assign_253"
  input: "^save_1/Assign_254"
  input: "^save_1/Assign_255"
  input: "^save_1/Assign_256"
  input: "^save_1/Assign_257"
  input: "^save_1/Assign_258"
  input: "^save_1/Assign_259"
  input: "^save_1/Assign_26"
  input: "^save_1/Assign_260"
  input: "^save_1/Assign_261"
  input: "^save_1/Assign_262"
  input: "^save_1/Assign_263"
  input: "^save_1/Assign_264"
  input: "^save_1/Assign_265"
  input: "^save_1/Assign_266"
  input: "^save_1/Assign_267"
  input: "^save_1/Assign_268"
  input: "^save_1/Assign_27"
  input: "^save_1/Assign_28"
  input: "^save_1/Assign_29"
  input: "^save_1/Assign_3"
  input: "^save_1/Assign_30"
  input: "^save_1/Assign_31"
  input: "^save_1/Assign_32"
  input: "^save_1/Assign_33"
  input: "^save_1/Assign_34"
  input: "^save_1/Assign_35"
  input: "^save_1/Assign_36"
  input: "^save_1/Assign_37"
  input: "^save_1/Assign_38"
  input: "^save_1/Assign_39"
  input: "^save_1/Assign_4"
  input: "^save_1/Assign_40"
  input: "^save_1/Assign_41"
  input: "^save_1/Assign_42"
  input: "^save_1/Assign_43"
  input: "^save_1/Assign_44"
  input: "^save_1/Assign_45"
  input: "^save_1/Assign_46"
  input: "^save_1/Assign_47"
  input: "^save_1/Assign_48"
  input: "^save_1/Assign_49"
  input: "^save_1/Assign_5"
  input: "^save_1/Assign_50"
  input: "^save_1/Assign_51"
  input: "^save_1/Assign_52"
  input: "^save_1/Assign_53"
  input: "^save_1/Assign_54"
  input: "^save_1/Assign_55"
  input: "^save_1/Assign_56"
  input: "^save_1/Assign_57"
  input: "^save_1/Assign_58"
  input: "^save_1/Assign_59"
  input: "^save_1/Assign_6"
  input: "^save_1/Assign_60"
  input: "^save_1/Assign_61"
  input: "^save_1/Assign_62"
  input: "^save_1/Assign_63"
  input: "^save_1/Assign_64"
  input: "^save_1/Assign_65"
  input: "^save_1/Assign_66"
  input: "^save_1/Assign_67"
  input: "^save_1/Assign_68"
  input: "^save_1/Assign_69"
  input: "^save_1/Assign_7"
  input: "^save_1/Assign_70"
  input: "^save_1/Assign_71"
  input: "^save_1/Assign_72"
  input: "^save_1/Assign_73"
  input: "^save_1/Assign_74"
  input: "^save_1/Assign_75"
  input: "^save_1/Assign_76"
  input: "^save_1/Assign_77"
  input: "^save_1/Assign_78"
  input: "^save_1/Assign_79"
  input: "^save_1/Assign_8"
  input: "^save_1/Assign_80"
  input: "^save_1/Assign_81"
  input: "^save_1/Assign_82"
  input: "^save_1/Assign_83"
  input: "^save_1/Assign_84"
  input: "^save_1/Assign_85"
  input: "^save_1/Assign_86"
  input: "^save_1/Assign_87"
  input: "^save_1/Assign_88"
  input: "^save_1/Assign_89"
  input: "^save_1/Assign_9"
  input: "^save_1/Assign_90"
  input: "^save_1/Assign_91"
  input: "^save_1/Assign_92"
  input: "^save_1/Assign_93"
  input: "^save_1/Assign_94"
  input: "^save_1/Assign_95"
  input: "^save_1/Assign_96"
  input: "^save_1/Assign_97"
  input: "^save_1/Assign_98"
  input: "^save_1/Assign_99"
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Fill"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Sum"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "sigmoid_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Neg"
  input: "sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/mul"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/Mul"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "absolute_difference/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/add_grad/tuple/control_dependency_1"
  input: "mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/Mul_1"
}
node {
  name: "gradients/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/mul_grad/Mul"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/mul_grad/Mul_1"
  input: "^gradients/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/absolute_difference/weighted_loss/value_grad/Shape"
  input: "gradients/absolute_difference/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "absolute_difference/weighted_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients/absolute_difference/weighted_loss/value_grad/div_no_nan"
  input: "gradients/absolute_difference/weighted_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/absolute_difference/weighted_loss/value_grad/Sum"
  input: "gradients/absolute_difference/weighted_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/Neg"
  op: "Neg"
  input: "absolute_difference/weighted_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/absolute_difference/weighted_loss/value_grad/Neg"
  input: "absolute_difference/weighted_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/absolute_difference/weighted_loss/value_grad/div_no_nan_1"
  input: "absolute_difference/weighted_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/mul"
  op: "Mul"
  input: "gradients/mul_grad/tuple/control_dependency_1"
  input: "gradients/absolute_difference/weighted_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/absolute_difference/weighted_loss/value_grad/mul"
  input: "gradients/absolute_difference/weighted_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/absolute_difference/weighted_loss/value_grad/Sum_1"
  input: "gradients/absolute_difference/weighted_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/absolute_difference/weighted_loss/value_grad/Reshape"
  input: "^gradients/absolute_difference/weighted_loss/value_grad/Reshape_1"
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/absolute_difference/weighted_loss/value_grad/Reshape"
  input: "^gradients/absolute_difference/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/weighted_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/absolute_difference/weighted_loss/value_grad/Reshape_1"
  input: "^gradients/absolute_difference/weighted_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/weighted_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000\025\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/absolute_difference/weighted_loss/value_grad/tuple/control_dependency"
  input: "gradients/absolute_difference/weighted_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/absolute_difference/weighted_loss/Sum_1_grad/Reshape"
  input: "gradients/absolute_difference/weighted_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000\025\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  input: "sigmoid_cross_entropy_loss/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "sigmoid_cross_entropy_loss/xentropy"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/absolute_difference/weighted_loss/Sum_1_grad/Tile"
  input: "gradients/absolute_difference/weighted_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Sum_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/absolute_difference/weighted_loss/Sum_grad/Reshape"
  input: "gradients/absolute_difference/weighted_loss/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/absolute_difference/weighted_loss/Sum_grad/Tile"
  input: "fifo_queue_Dequeue:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/absolute_difference/weighted_loss/Sum_grad/Tile"
  input: "absolute_difference/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/absolute_difference/weighted_loss/Mul_grad/Mul"
  input: "^gradients/absolute_difference/weighted_loss/Mul_grad/Mul_1"
}
node {
  name: "gradients/absolute_difference/weighted_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/absolute_difference/weighted_loss/Mul_grad/Mul"
  input: "^gradients/absolute_difference/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/weighted_loss/Mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/weighted_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/absolute_difference/weighted_loss/Mul_grad/Mul_1"
  input: "^gradients/absolute_difference/weighted_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/weighted_loss/Mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
  op: "Neg"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add/x"
  op: "Const"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add"
  op: "Add"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add/x"
  input: "sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/mul"
  op: "Mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/Select_grad/zeros_like"
  op: "Fill"
  input: "gradients/absolute_difference/Select_grad/zeros_like/shape_as_tensor"
  input: "gradients/absolute_difference/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/Select_grad/Select"
  op: "Select"
  input: "absolute_difference/Less"
  input: "gradients/absolute_difference/weighted_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/absolute_difference/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/Select_grad/Select_1"
  op: "Select"
  input: "absolute_difference/Less"
  input: "gradients/absolute_difference/Select_grad/zeros_like"
  input: "gradients/absolute_difference/weighted_loss/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/absolute_difference/Select_grad/Select"
  input: "^gradients/absolute_difference/Select_grad/Select_1"
}
node {
  name: "gradients/absolute_difference/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/absolute_difference/Select_grad/Select"
  input: "^gradients/absolute_difference/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/absolute_difference/Select_grad/Select_1"
  input: "^gradients/absolute_difference/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000\025\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  op: "Fill"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like/shape_as_tensor"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul"
  op: "Mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  input: "fifo_queue_Dequeue:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  input: "pose/part_pred/block4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul_1"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  op: "Mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/mul"
  input: "sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/absolute_difference/mul_grad/Shape"
  input: "gradients/absolute_difference/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/Mul"
  op: "Mul"
  input: "gradients/absolute_difference/Select_grad/tuple/control_dependency"
  input: "absolute_difference/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/Sum"
  op: "Sum"
  input: "gradients/absolute_difference/mul_grad/Mul"
  input: "gradients/absolute_difference/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/absolute_difference/mul_grad/Sum"
  input: "gradients/absolute_difference/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/Mul_1"
  op: "Mul"
  input: "absolute_difference/mul/x"
  input: "gradients/absolute_difference/Select_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/absolute_difference/mul_grad/Mul_1"
  input: "gradients/absolute_difference/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/absolute_difference/mul_grad/Sum_1"
  input: "gradients/absolute_difference/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/absolute_difference/mul_grad/Reshape"
  input: "^gradients/absolute_difference/mul_grad/Reshape_1"
}
node {
  name: "gradients/absolute_difference/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/absolute_difference/mul_grad/Reshape"
  input: "^gradients/absolute_difference/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/absolute_difference/mul_grad/Reshape_1"
  input: "^gradients/absolute_difference/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/absolute_difference/sub_1_grad/Shape"
  input: "gradients/absolute_difference/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/absolute_difference/Select_grad/tuple/control_dependency_1"
  input: "gradients/absolute_difference/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/absolute_difference/sub_1_grad/Sum"
  input: "gradients/absolute_difference/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/absolute_difference/Select_grad/tuple/control_dependency_1"
  input: "gradients/absolute_difference/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/absolute_difference/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/absolute_difference/sub_1_grad/Neg"
  input: "gradients/absolute_difference/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/absolute_difference/sub_1_grad/Reshape"
  input: "^gradients/absolute_difference/sub_1_grad/Reshape_1"
}
node {
  name: "gradients/absolute_difference/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/absolute_difference/sub_1_grad/Reshape"
  input: "^gradients/absolute_difference/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/sub_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/absolute_difference/sub_1_grad/Reshape_1"
  input: "^gradients/absolute_difference/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/sub_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000\025\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  op: "Fill"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like/shape_as_tensor"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/Square_grad/Const"
  op: "Const"
  input: "^gradients/absolute_difference/mul_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/Square_grad/Mul"
  op: "Mul"
  input: "absolute_difference/Sub"
  input: "gradients/absolute_difference/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/absolute_difference/mul_grad/tuple/control_dependency_1"
  input: "gradients/absolute_difference/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\032\000\000\000\032\000\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/absolute_difference/mul_1_grad/Shape"
  input: "gradients/absolute_difference/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/absolute_difference/sub_1_grad/tuple/control_dependency"
  input: "absolute_difference/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/absolute_difference/mul_1_grad/Mul"
  input: "gradients/absolute_difference/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/absolute_difference/mul_1_grad/Sum"
  input: "gradients/absolute_difference/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/Mul_1"
  op: "Mul"
  input: "absolute_difference/mul_1/x"
  input: "gradients/absolute_difference/sub_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/absolute_difference/mul_1_grad/Mul_1"
  input: "gradients/absolute_difference/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/absolute_difference/mul_1_grad/Sum_1"
  input: "gradients/absolute_difference/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/absolute_difference/mul_1_grad/Reshape"
  input: "^gradients/absolute_difference/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/absolute_difference/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/absolute_difference/mul_1_grad/Reshape"
  input: "^gradients/absolute_difference/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/absolute_difference/mul_1_grad/Reshape_1"
  input: "^gradients/absolute_difference/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/Abs_grad/Sign"
  op: "Sign"
  input: "absolute_difference/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/Abs_grad/mul"
  op: "Mul"
  input: "gradients/absolute_difference/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/absolute_difference/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/pose/part_pred/block4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/pose/part_pred/block4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN"
  input: "^gradients/pose/part_pred/block4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/pose/part_pred/block4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN"
  input: "^gradients/pose/part_pred/block4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
}
node {
  name: "gradients/pose/part_pred/block4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/pose/part_pred/block4/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/pose/part_pred/block4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pose/part_pred/block4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/absolute_difference/Square_grad/Mul_1"
  input: "gradients/absolute_difference/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/Sub_grad/Neg"
  op: "Neg"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/absolute_difference/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN_1"
  input: "^gradients/absolute_difference/Sub_grad/Neg"
}
node {
  name: "gradients/absolute_difference/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN_1"
  input: "^gradients/absolute_difference/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/absolute_difference/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/absolute_difference/Sub_grad/Neg"
  input: "^gradients/absolute_difference/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/Sub_grad/Neg"
      }
    }
  }
}
node {
  name: "gradients/pose/part_pred/block4/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\025\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "gradients/pose/part_pred/block4/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients/pose/part_pred/block4/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/pose/part_pred/block4/conv2d_transpose_grad/Shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/pose/part_pred/block4/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients/pose/part_pred/block4/BiasAdd_grad/tuple/control_dependency"
  input: "pose/part_pred/block4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/pose/part_pred/block4/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/pose/part_pred/block4/conv2d_transpose_grad/Conv2D"
  input: "^gradients/pose/part_pred/block4/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/pose/part_pred/block4/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/pose/part_pred/block4/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients/pose/part_pred/block4/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pose/part_pred/block4/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/pose/part_pred/block4/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/pose/part_pred/block4/conv2d_transpose_grad/Conv2D"
  input: "^gradients/pose/part_pred/block4/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pose/part_pred/block4/conv2d_transpose_grad/Conv2D"
      }
    }
  }
}
node {
  name: "gradients/pose/locref_pred/block4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/absolute_difference/Sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/pose/locref_pred/block4/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/absolute_difference/Sub_grad/tuple/control_dependency"
  input: "^gradients/pose/locref_pred/block4/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/pose/locref_pred/block4/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/absolute_difference/Sub_grad/tuple/control_dependency"
  input: "^gradients/pose/locref_pred/block4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/absolute_difference/Square_grad/Mul_1"
      }
    }
  }
}
node {
  name: "gradients/pose/locref_pred/block4/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/pose/locref_pred/block4/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/pose/locref_pred/block4/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pose/locref_pred/block4/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000*\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "gradients/pose/locref_pred/block4/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/Shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/Conv2D"
  op: "Conv2D"
  input: "gradients/pose/locref_pred/block4/BiasAdd_grad/tuple/control_dependency"
  input: "pose/locref_pred/block4/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/pose/locref_pred/block4/conv2d_transpose_grad/Conv2D"
  input: "^gradients/pose/locref_pred/block4/conv2d_transpose_grad/Conv2DBackpropFilter"
}
node {
  name: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/Conv2DBackpropFilter"
  input: "^gradients/pose/locref_pred/block4/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pose/locref_pred/block4/conv2d_transpose_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/Conv2D"
  input: "^gradients/pose/locref_pred/block4/conv2d_transpose_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pose/locref_pred/block4/conv2d_transpose_grad/Conv2D"
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/pose/part_pred/block4/conv2d_transpose_grad/tuple/control_dependency_1"
  input: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/pose/part_pred/block4/conv2d_transpose_grad/Conv2D"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_2"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND/block_shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND/block_shape"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/SpaceToBatchND_grad/BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_8"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_9"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_10"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_11"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_3"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_12"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_13"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_14"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_15"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_16"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_17"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_18"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_19"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND/block_shape"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND/block_shape"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/SpaceToBatchND_grad/BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_20"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_21"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_22"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_23"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_4"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_24"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_25"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_26"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_27"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_28"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_29"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_30"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_31"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_32"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_33"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_34"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_35"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND/block_shape"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND/block_shape"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/SpaceToBatchND_grad/BatchToSpaceND"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_36"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_37"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_38"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_39"
  op: "ZerosLike"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_5"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_40"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_41"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_42"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_43"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_44"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_45"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_46"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_47"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_48"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_49"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_50"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_51"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_6"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_52"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_53"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_54"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_55"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_56"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_57"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_58"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_59"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_60"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_61"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_62"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_63"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_7"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_64"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_65"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_66"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_67"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_68"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_69"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_70"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_71"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_72"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_73"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_74"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_75"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_8"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_76"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_77"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_78"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_79"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_80"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_81"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_82"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_83"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_84"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_85"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_86"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_87"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_9"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_88"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_89"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_90"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_91"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_92"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_93"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_94"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_95"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_96"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_97"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_98"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_99"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_10"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_100"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_101"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_102"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_103"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_104"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_105"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_106"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_107"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_108"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_109"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_110"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_111"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_112"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_113"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_114"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_115"
  op: "ZerosLike"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_11"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/zeros_like_116"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_117"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_118"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_119"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_120"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_121"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_122"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_123"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/stack"
  op: "Pack"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Rank"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Slice"
  op: "Slice"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/Pad/paddings"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Slice/begin"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Slice"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\031\000\000\000\031\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Reshape"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/Pad_grad/Slice_1"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_124"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_125"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_126"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_127"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool_grad/MaxPoolGrad"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool_grad/MaxPoolGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_12"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_128"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_129"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_130"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_131"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_132"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_133"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_134"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_135"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_136"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_137"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_138"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_139"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_13"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_140"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_141"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_142"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_143"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_144"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_145"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_146"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_147"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_148"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_149"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_150"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_151"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_14"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_152"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_153"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_154"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_155"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_156"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_157"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_158"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_159"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_160"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_161"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_162"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_163"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_164"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_165"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_166"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_167"
  op: "ZerosLike"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_15"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/zeros_like_168"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_169"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_170"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_171"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_172"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_173"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_174"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_175"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/stack"
  op: "Pack"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Rank"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Slice"
  op: "Slice"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/Pad/paddings"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Slice/begin"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Reshape"
  op: "Reshape"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Slice"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\0002\000\000\0002\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Slice_1"
  op: "Slice"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Reshape"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/Pad_grad/Slice_1"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_176"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_177"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_178"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_179"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool_grad/MaxPoolGrad"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool_grad/MaxPoolGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_16"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_180"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_181"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_182"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_183"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_184"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_185"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_186"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_187"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_188"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_189"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_190"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_191"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/AddN_17"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_192"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_193"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_194"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_195"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/add_grad/tuple/control_dependency"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/zeros_like_196"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_197"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_198"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_199"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/add_grad/tuple/control_dependency_1"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_200"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_201"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_202"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_203"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_204"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_205"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_206"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_207"
  op: "ZerosLike"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/read"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/pool1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "resnet_v1_50/conv1/Relu"
  input: "resnet_v1_50/pool1/MaxPool"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/resnet_v1_50/pool1/MaxPool_grad/MaxPoolGrad"
  input: "resnet_v1_50/conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_208"
  op: "ZerosLike"
  input: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_209"
  op: "ZerosLike"
  input: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_210"
  op: "ZerosLike"
  input: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/zeros_like_211"
  op: "ZerosLike"
  input: "resnet_v1_50/conv1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "gradients/resnet_v1_50/conv1/Relu_grad/ReluGrad"
  input: "resnet_v1_50/conv1/Conv2D"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/read"
  input: "resnet_v1_50/conv1/BatchNorm/moving_mean/read"
  input: "resnet_v1_50/conv1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "resnet_v1_50/Pad"
  input: "resnet_v1_50/conv1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/resnet_v1_50/conv1/Conv2D_grad/ShapeN"
  input: "resnet_v1_50/conv1/weights/read"
  input: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "resnet_v1_50/Pad"
  input: "gradients/resnet_v1_50/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/resnet_v1_50/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/resnet_v1_50/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/resnet_v1_50/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/resnet_v1_50/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/resnet_v1_50/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/resnet_v1_50/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/resnet_v1_50/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/resnet_v1_50/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/weights/Momentum"
  input: "resnet_v1_50/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\010\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 2048
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2048
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  op: "Fill"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/shape_as_tensor"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  op: "Assign"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/read"
  op: "Identity"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\025\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "pose/part_pred/block4/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "pose/part_pred/block4/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 21
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Momentum/Assign"
  op: "Assign"
  input: "pose/part_pred/block4/weights/Momentum"
  input: "pose/part_pred/block4/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pose/part_pred/block4/weights/Momentum/read"
  op: "Identity"
  input: "pose/part_pred/block4/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 21
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 21
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/Momentum/Assign"
  op: "Assign"
  input: "pose/part_pred/block4/biases/Momentum"
  input: "pose/part_pred/block4/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pose/part_pred/block4/biases/Momentum/read"
  op: "Identity"
  input: "pose/part_pred/block4/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Momentum/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000*\000\000\000\000\010\000\000"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Momentum/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Momentum/Initializer/zeros"
  op: "Fill"
  input: "pose/locref_pred/block4/weights/Momentum/Initializer/zeros/shape_as_tensor"
  input: "pose/locref_pred/block4/weights/Momentum/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 42
        }
        dim {
          size: 2048
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Momentum/Assign"
  op: "Assign"
  input: "pose/locref_pred/block4/weights/Momentum"
  input: "pose/locref_pred/block4/weights/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pose/locref_pred/block4/weights/Momentum/read"
  op: "Identity"
  input: "pose/locref_pred/block4/weights/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/Momentum/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/Momentum"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/Momentum/Assign"
  op: "Assign"
  input: "pose/locref_pred/block4/biases/Momentum"
  input: "pose/locref_pred/block4/biases/Momentum/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "pose/locref_pred/block4/biases/Momentum/read"
  op: "Identity"
  input: "pose/locref_pred/block4/biases/Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
}
node {
  name: "Momentum/momentum"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/conv1/weights"
  input: "resnet_v1_50/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/conv1/BatchNorm/beta"
  input: "resnet_v1_50/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  op: "ApplyMomentum"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
  input: "resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum"
  input: "Placeholder_5"
  input: "gradients/resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pose/part_pred/block4/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pose/part_pred/block4/weights"
  input: "pose/part_pred/block4/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/pose/part_pred/block4/conv2d_transpose_grad/tuple/control_dependency"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pose/part_pred/block4/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pose/part_pred/block4/biases"
  input: "pose/part_pred/block4/biases/Momentum"
  input: "Placeholder_5"
  input: "gradients/pose/part_pred/block4/BiasAdd_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/part_pred/block4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pose/locref_pred/block4/weights/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pose/locref_pred/block4/weights"
  input: "pose/locref_pred/block4/weights/Momentum"
  input: "Placeholder_5"
  input: "gradients/pose/locref_pred/block4/conv2d_transpose_grad/tuple/control_dependency"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update_pose/locref_pred/block4/biases/ApplyMomentum"
  op: "ApplyMomentum"
  input: "pose/locref_pred/block4/biases"
  input: "pose/locref_pred/block4/biases/Momentum"
  input: "Placeholder_5"
  input: "gradients/pose/locref_pred/block4/BiasAdd_grad/tuple/control_dependency_1"
  input: "Momentum/momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@pose/locref_pred/block4/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Momentum/update"
  op: "NoOp"
  input: "^Momentum/update_pose/locref_pred/block4/biases/ApplyMomentum"
  input: "^Momentum/update_pose/locref_pred/block4/weights/ApplyMomentum"
  input: "^Momentum/update_pose/part_pred/block4/biases/ApplyMomentum"
  input: "^Momentum/update_pose/part_pred/block4/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/conv1/BatchNorm/beta/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/conv1/BatchNorm/gamma/ApplyMomentum"
  input: "^Momentum/update_resnet_v1_50/conv1/weights/ApplyMomentum"
}
node {
  name: "Momentum/Const"
  op: "Const"
  input: "^Momentum/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Momentum"
  op: "AssignAddVariableOp"
  input: "global_step"
  input: "Momentum/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "train_op/CheckNumerics"
  op: "CheckNumerics"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "LossTensor is inf or nan"
    }
  }
}
node {
  name: "train_op/control_dependency"
  op: "Identity"
  input: "train_op/CheckNumerics"
  input: "^Momentum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_op/CheckNumerics"
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^pose/locref_pred/block4/biases/Assign"
  input: "^pose/locref_pred/block4/biases/Momentum/Assign"
  input: "^pose/locref_pred/block4/weights/Assign"
  input: "^pose/locref_pred/block4/weights/Momentum/Assign"
  input: "^pose/part_pred/block4/biases/Assign"
  input: "^pose/part_pred/block4/biases/Momentum/Assign"
  input: "^pose/part_pred/block4/weights/Assign"
  input: "^pose/part_pred/block4/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Assign"
  input: "^resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Assign"
  input: "^resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Assign"
  input: "^resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Assign"
  input: "^resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/weights/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Assign"
  input: "^resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/weights/Momentum/Assign"
  input: "^resnet_v1_50/conv1/BatchNorm/beta/Assign"
  input: "^resnet_v1_50/conv1/BatchNorm/beta/Momentum/Assign"
  input: "^resnet_v1_50/conv1/BatchNorm/gamma/Assign"
  input: "^resnet_v1_50/conv1/BatchNorm/gamma/Momentum/Assign"
  input: "^resnet_v1_50/conv1/BatchNorm/moving_mean/Assign"
  input: "^resnet_v1_50/conv1/BatchNorm/moving_variance/Assign"
  input: "^resnet_v1_50/conv1/weights/Assign"
  input: "^resnet_v1_50/conv1/weights/Momentum/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
versions {
  producer: 38
}
